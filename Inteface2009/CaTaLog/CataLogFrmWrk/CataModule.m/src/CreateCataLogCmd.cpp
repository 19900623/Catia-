// COPYRIGHT Dassault Systemes 2018
//===================================================================
//
// CreateCataLogCmd.cpp
// The state chart based command: CreateCataLogCmd
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Oct 2018  Creation: Code generated by the CAA wizard  dell
//===================================================================
#include "CreateCataLogCmd.h"
#include "CATIndicationAgent.h"
#include "CATMathPlane.h"

#include "CATCreateExternalObject.h"
CATCreateClass( CreateCataLogCmd);


//-------------------------------------------------------------------------
// Constructor
//-------------------------------------------------------------------------
CreateCataLogCmd::CreateCataLogCmd() :
  CATStateCommand ("CreateCataLogCmd", CATDlgEngOneShot, CATCommandModeExclusive) 
//  Valid states are CATDlgEngOneShot and CATDlgEngRepeat
  ,_Indication(NULL)
{
}

//-------------------------------------------------------------------------
// Destructor
//-------------------------------------------------------------------------
CreateCataLogCmd::~CreateCataLogCmd()
{
   if (_Indication != NULL) 
      _Indication->RequestDelayedDestruction();
}


//-------------------------------------------------------------------------
// BuildGraph()
//-------------------------------------------------------------------------
void CreateCataLogCmd::BuildGraph()
{


  // TODO: Define the StateChart 
  // ---------------------------
  _Indication = new CATIndicationAgent ("Indication");
  CATMathPlane PlaneXY;
  _Indication -> SetMathPlane (PlaneXY);
  CATDialogState * initialState = GetInitialState("initialState");
  initialState -> AddDialogAgent (_Indication);
  
  AddTransition( initialState, NULL, 
                 IsOutputSetCondition (_Indication),
                 Action ((ActionMethod) &CreateCataLogCmd::ActionOne));
}


//-------------------------------------------------------------------------
// ActionOne ()
//-------------------------------------------------------------------------
CATBoolean CreateCataLogCmd::ActionOne( void *data )
{
  // TODO: Define the action associated with the transition 
  // ------------------------------------------------------

  return TRUE;
}
