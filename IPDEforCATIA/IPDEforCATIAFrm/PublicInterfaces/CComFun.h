//===================================================================
// COPYRIGHT HUSTCAD 2018/12/07
//===================================================================
// CComFun.cpp
// Header definition of class CComFun
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2018/12/07 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef CComFun_H
#define CComFun_H

//#include "CatiaToIntevueAddin.h"


//-----------------------------------------------------------------------
class CATDialog;
#include "CATIPLMComponent.h"
#include "CATBaseUnknown.h"
#include "CATIPLMProducts.h"
#include "CATIPLMComponent.h"
#include "CATDlgLabel.h"
#include "CATDlgGridConstraints.h"

#ifndef _WINDOWS_
#include <afxwin.h>
#include <afxext.h>         // MFC extensions
#include <afxdisp.h>        // MFC Automation classes
#include <afxdtctl.h>		// MFC support for Internet Explorer 4 Common Controls
#ifndef _AFX_NO_AFXCMN_SUPPORT
#include <afxcmn.h>			// MFC support for Windows Common Controls
#endif // _AFX_NO_AFXCMN_SUPPORT
#else
#undef  _WINDOWS_
#include <afxwin.h>
#include <afxext.h>         // MFC extensions
#include <afxdisp.h>        // MFC Automation classes
#include <afxdtctl.h>		// MFC support for Internet Explorer 4 Common Controls
#ifndef _AFX_NO_AFXCMN_SUPPORT
#include <afxcmn.h>			// MFC support for Windows Common Controls
#endif // _AFX_NO_AFXCMN_SUPPORT
#define  _WINDOWS_
#endif


class  CComFun
{
public:
	static CString gstrOutputPath;
	static BOOL gbOutputStep;// 零件是否输出step文件；
	static float gfChord; //网格划分所需要的炫高；
	static BOOL gbOutputPmi;//是否输出PMI信息
	static BOOL gbFromGraph;
	
	
// Standard constructors and destructors
// -------------------------------------
CComFun ();
virtual ~CComFun ();

//交互输入获取目录
static CATUnicodeString GetInputDirectory(CATDialog *pParent); //选择一个目录用于输出
//遍历对象
static void NavigateObject(CATBaseUnknown_var spObject);

static void TestComponent(CATIPLMComponent * pComponent);
//用于查看component的相关信息的函数
static void InfoComponent(CATIPLMComponent *pComponent);
//用于查看baseunknown的信息
static void InfoBaseUnkown(CATBaseUnknown *pBaseUnknow);
//导入step文件
static CATBaseUnknown* ImportStepFile(CString strFileName);
//导出step文件
static BOOL ExportStep(CATIPLMComponent *pComponent,CString strFileName);
//导入dwg文件
static CATBaseUnknown* ImportDwgFile(CString strFileName);
//导出dwg文件
static BOOL ExportDwg(CATIPLMComponent *pComponent,CString  strFileName);

static BOOL IsPart(CATIPLMComponent *pComponent);
static BOOL isAsm(CATIPLMComponent *pComponent);
static BOOL isDrawing(CATIPLMComponent *pComponent);

static void InitMap();//初始化map，这个函数在转换之前调用
static BOOL HasProcess(CATIPLMComponent *pComponent); //是否已经处理了这个零件

//将component的名字转换为intevue的名字
static CString ToIntevueFile(CATIPLMComponent *pComponent);
static int CComFun::GetIvpModifiedTime(CString ivpName);
static BOOL CComFun::SetIvpModifiedTime(CString time,CString ivpPath);
static CString CComFun::GetCatiaModifiedTime(CATBaseUnknown *pComponent);
static CATUnicodeString ToStepFile(CATIPLMComponent *pComponent);
static CString GetLocalPath(CATIPLMComponent *pComponent); //得到这个文件在本地的映射文件

static CString GetObjName(CATBaseUnknown *pObj);

static BOOL GetInstanceTranf(CATIPLMProducts *pIntstance,double *dMatrixOutput);
//
// TODO: Add your methods for this class here.
//

private:
// Copy constructor and equal operator
// -----------------------------------
CComFun (CComFun &);
CComFun& operator=(CComFun&);

};

//-----------------------------------------------------------------------

#endif
